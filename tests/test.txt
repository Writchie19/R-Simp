testwhileloop = 1;
testwhileloop2 = 10;
testwhileloopresult = 0;
while (testwhileloop < 10) {
    testwhileloop = testwhileloop + 1;
    testwhileloopresult = testwhileloop;
}

testwhileloopbool = TRUE;
while (testwhileloopbool == TRUE) {
    testwhileloop = testwhileloop - 1;
    if (testwhileloop < 0) {
        testwhileloopbool = FALSE;
    }
}

count = 0;
while (TRUE) {
    count = count + 1;
    if (count >= 15) {
        break;
    }
    continue;
    count = 100;
}

varinfor = 0;
for (var in 1:10) {
    varinfor = varinfor + var ^ 2;
}
for (var in c(1,2,3,4,5)) {
    varinfor = varinfor - var ^ 3;
}
for (var in c("This", "is", "a", "test")) {
    varinfor2 = var;
}

for (var in 1:10) {
    if (var >= 8) {
        break;
    }
    continue;
    count = 100;
}
colonopvector = 1:10;
for (var in colonopvector) {
    varinfor3 = varinfor + var ^ 2;
}
nestedFor = 1;
for (var in 1:10) {
    for (var2 in 1:10) {
        nestedFor = nestedFor * var2;
    }
}
colonopvector[1] = 11;
index1 = colonopvector[1];
vectorstr = c("This", "is", "a", "test",colonopvector);
index2 = vectorstr[2*2-3];
colonopvector[2] = "test";
vectorstr2 = colonopvector;
vectorstr2[4] = 6;

range1 = 1:5;
indexwithindex = colonopvector[range1[1]];
indexwithvector = colonopvector[range1];

one = 1;
truee = TRUE;
vectornum1 = c(one, one + one, 4 - one, 4);
vectorbool = c(truee, TRUE, FALSE);
indexwithvectorbool = vectornum1[vectorbool];
indexwithnegatives = vectornum1[c(-1,-2)];
multitypevector1 = c("a", "b", 2, 3, TRUE);
multitypevector2 = c(TRUE, FALSE, 2, 3);
multitypevector3 = c(2,3,"asdf");
xtempstr = "asdf";
multitypevector4 = c(1,2.2,xtempstr, vectornum1);

if (TRUE) { 
    x = 5; 
}
if (FALSE) { 
    y = 7; 
}
else if (x == 6) {
    x = 7;
}
else if (x == 5) {
    x = 4;
}  
else {
    x = 14;
}
if (x >= 4 && x < 6) { 
    z = 13;
    if (z > x) {
        y = z + x;
    } else {
        y = z - x;
    }
}

add <- 9 + 4;
power = add ^ 2;
addmult = 4 + 2 * 3;
lessequal = 5 <= 4;
greaterequal = 5 >= 4;
equals = 5 == 4;
notequal = 5 != 4;
notequal2 = 4 != 4;
equals2 = 4 == 4;
or = 1 | 2;
logicor = 1 || 2;
and = 1 & 2;
logicand = 1 && 2;
booleantrue = TRUE;
booleanfalse = FALSE;
booleanOr = booleantrue || booleanfalse;
booleanAnd = booleantrue && booleanfalse;
booleanequality = booleantrue == booleanfalse;
booleanequality2 = booleantrue == TRUE;
nottrue = !TRUE;
notfalse = !FALSE;
booleanAndNot = TRUE && !FALSE;
string1 = "Test" + "String" + "Double";
string2 = 'Test' + 'String' + 'Single';
string3 = string1 + string2;